<?php

/**
 * @file
 * Primary module hooks for Anchor TOC module.
 */

use Drupal\anchor_toc\AnchorTocUtils;
use Drupal\field\Entity\FieldConfig;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_theme().
 */
function anchor_toc_theme($existing, $type, $theme, $path) {
  return [
    'anchor_toc_list' => [
      'variables' => [
        'links' => []
      ],
    ],
    'anchor_toc_menu_list' => [
      'variables' => [
        'links' => []
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function anchor_toc_preprocess_paragraph(&$variables) {

  // Get paragraph.
  /** @var Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['elements']['#paragraph'];

  /** @var FieldConfig[] $fieldDefinitions */
  $fieldDefinitions = !empty($paragraph) ? $paragraph->getFieldDefinitions() : [NULL];
  if (!$fieldDefinitions) {
    return;
  }

  // Set Anchor TOC HTML ID variable:
  foreach ($fieldDefinitions as $fieldDefinition) {
    if ($fieldDefinition->getType() == 'anchor_toc') {
      // Build link from field value.
      $value = $paragraph->get($fieldDefinition->getName())->getValue();
      if (isset($value[0])) {
        $link = AnchorTocUtils::buildLink($value[0]['toc'], $value[0]['label'], $value[0]['anchor_id']);
       //  dsm($link, 'link');
        if (!empty($link)) {
          // Set anchor as ID attribute.
          $variables['attributes'] = new Attribute([
            'id' => $link['anchor'],
          ]);
        }
      }
    }
  }
}

